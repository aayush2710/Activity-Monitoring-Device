
#include "CurieIMU.h"
#include "CuriePME.h"
#include <CurieBLE.h>
//#include "MemoryFree.h"
#include <avr/pgmspace.h>

const unsigned int sampleRateHZ = 100;

const unsigned int vectorNumBytes = 128;

const unsigned int samplesPerVector = (vectorNumBytes / 3);


const unsigned int sensorBufSize = 2048;
const int IMULow = -32768;
const int IMUHigh = 32767;


BLEPeripheral blePeripheral;
BLEService fitnessService("19B10000-E8F2-537E-4F6C-D104768A1214");
BLEUnsignedCharCharacteristic fitnessTypeChar("19B10001-E8F2-537E-4F6C-D104768A1214",
    BLERead | BLENotify);

void setup()
{
  Serial.begin(9600);
  //while (!Serial);
  Serial.println("INIT COMPL");

  CurieIMU.begin();
  CuriePME.begin();

  CurieIMU.setAccelerometerRate(sampleRateHZ);
  CurieIMU.setAccelerometerRange(1);

  //CuriePME.setClassifierMode(CuriePME.KNN_Mode);

  /*category 1 = still*/
  static byte subject102_1_0[] PROGMEM = {59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 60, 59, 60, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 60, 58, 60, 60, 61, 59, 59, 56, 56, 57, 56, 56, 56, 56, 56, 55, 54, 58, 60, 62, 53, 58, 57, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 58, 59, 59, 60, 60, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59};
  CuriePME.learn(subject102_1_0, 120, 1);
  static byte subject102_1_1[] PROGMEM = {57, 57, 57, 57, 58, 59, 58, 59, 62, 59, 60, 59, 59, 59, 59, 60, 59, 60, 59, 59, 59, 59, 59, 59, 60, 58, 60, 60, 59, 59, 59, 59, 60, 60, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 60, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 60, 59, 59, 60, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 60, 59, 60, 59, 60, 59, 60, 59, 59, 59, 59, 59, 60, 60, 59, 59, 59, 59, 60, 59, 59, 58, 59, 59, 60, 59, 60, 59, 59, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59};
  CuriePME.learn(subject102_1_1, 120, 1);

  /*category = 3  walk*/
  static byte subject102_3_0[] PROGMEM = {62, 74, 4, 59, 60, 54, 61, 74, 41, 52, 61, 57, 58, 76, 24, 48, 65, 59, 42, 89, 71, 57, 61, 55, 56, 91, 23, 53, 67, 30, 59, 81, 0, 62, 55, 51, 66, 72, 47, 72, 61, 28, 65, 67, 59, 59, 66, 60, 21, 86, 60, 67, 58, 22, 65, 78, 4, 55, 61, 50, 80, 69, 77, 67, 33, 35, 75, 0, 68, 76, 46, 0, 89, 59, 50, 61, 47, 2, 79, 51, 60, 70, 58, 10, 79, 43, 54, 59, 46, 3, 78, 1, 70, 69, 47, 21, 75, 38, 55, 69, 59, 16, 79, 19, 42, 59, 57, 25, 69, 56, 76, 74, 61, 36, 75, 63, 64, 66, 60, 51};
  CuriePME.learn(subject102_3_0, 120, 3);
  static byte subject102_3_1[] PROGMEM = {23, 55, 59, 38, 62, 79, 64, 61, 60, 49, 27, 71, 41, 78, 71, 62, 48, 63, 87, 0, 41, 58, 61, 30, 67, 68, 42, 65, 51, 40, 67, 76, 31, 60, 58, 37, 23, 72, 40, 65, 69, 57, 42, 69, 50, 81, 70, 57, 49, 68, 75, 24, 40, 64, 44, 70, 73, 57, 45, 66, 32, 62, 81, 91, 42, 61, 54, 31, 69, 25, 73, 61, 48, 24, 68, 59, 34, 80, 64, 53, 76, 69, 82, 64, 53, 58, 59, 81, 0, 45, 57, 49, 67, 79, 62, 50, 65, 59, 1, 71, 37, 75, 61, 57, 44, 84, 76, 2, 83, 63, 42, 60, 72, 20, 32, 68, 44, 22, 76, 57};
  CuriePME.learn(subject102_3_1, 120, 3);
  static byte subject102_3_2[] PROGMEM = {68, 45, 62, 74, 63, 51, 58, 59, 36, 75, 75, 20, 54, 60, 42, 56, 79, 10, 65, 66, 42, 60, 82, 65, 52, 66, 46, 6, 78, 59, 75, 64, 52, 23, 65, 8, 92, 64, 45, 45, 63, 69, 79, 61, 60, 50, 56, 69, 75, 42, 61, 51, 0, 79, 28, 70, 65, 56, 49, 74, 50, 79, 67, 56, 54, 72, 57, 68, 63, 50, 57, 62, 81, 68, 29, 60, 39, 59, 71, 31, 55, 59, 56, 61, 74, 74, 55, 63, 52, 40, 75, 33, 65, 63, 61, 38, 54, 84, 9, 55, 50, 52, 54, 77, 64, 83, 68, 51, 29, 66, 68, 96, 84, 65, 47, 77, 75, 0, 51, 58};
  CuriePME.learn(subject102_3_2, 120, 3);
  static byte subject102_3_3[] PROGMEM = {66, 61, 57, 44, 57, 67, 54, 70, 60, 61, 40, 60, 59, 65, 53, 42, 69, 55, 17, 65, 62, 34, 73, 60, 52, 42, 66, 61, 33, 71, 59, 58, 51, 60, 68, 56, 76, 62, 51, 56, 50, 59, 78, 71, 71, 59, 61, 44, 53, 73, 57, 61, 48, 55, 53, 58, 53, 65, 65, 63, 56, 59, 57, 52, 72, 71, 76, 60, 59, 47, 50, 71, 64, 53, 61, 65, 50, 52, 73, 77, 11, 39, 65, 63, 52, 77, 74, 1, 33, 61, 62, 28, 64, 47, 73, 64, 58, 54, 44, 65, 71, 82, 39, 63, 59, 46, 60, 73, 61, 65, 65, 66, 40, 58, 64, 63, 71, 78, 58, 47};
  CuriePME.learn(subject102_3_3, 120, 3);
  static byte subject102_3_4[] PROGMEM = {61, 68, 66, 84, 43, 60, 55, 31, 63, 73, 60, 67, 52, 68, 35, 67, 76, 49, 52, 50, 64, 56, 62, 64, 55, 68, 83, 72, 48, 48, 55, 79, 51, 61, 62, 51, 25, 65, 53, 71, 72, 65, 52, 33, 68, 71, 55, 71, 67, 53, 18, 71, 42, 67, 91, 65, 45, 70, 49, 76, 81, 63, 39, 74, 77, 81, 70, 58, 56, 76, 70, 72, 79, 65, 50, 67, 71, 43, 79, 64, 42, 76, 74, 58, 43, 49, 52, 24, 72, 59, 47, 62, 66, 12, 80, 68, 51, 60, 65, 53, 66, 75, 57, 82, 44, 57, 53, 67, 80, 66, 71, 64, 32, 77, 68, 63, 72, 58, 47, 62};
  CuriePME.learn(subject102_3_4, 120, 3);
  static byte subject102_3_5[] PROGMEM = {57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 55, 56, 72, 38, 62, 60, 56, 51, 55, 84, 58, 54, 63, 42, 31, 80, 74, 33, 58, 55, 56, 72, 48, 66, 59, 58, 53, 40, 83, 62, 59, 60, 62, 39, 57, 80, 41, 58, 60, 56, 28, 81, 73, 41, 59, 61, 43, 81, 50, 64, 57, 59, 45, 79, 65, 27, 57, 53, 28, 78, 66, 32, 58, 54, 13, 86, 66, 43, 61, 57, 13, 84, 56, 49, 58, 57, 16, 86, 81, 49, 57, 60, 7, 85, 43, 52, 56, 56, 9, 84, 38, 58, 56, 57, 21, 84, 0, 73, 55, 62, 20, 82, 87, 20, 51, 56, 24, 82, 87};
  CuriePME.learn(subject102_3_5, 120, 3);
  static byte subject102_3_6[] PROGMEM = {59, 31, 78, 95, 18, 62, 55, 42, 72, 48, 83, 63, 61, 52, 67, 4, 81, 62, 61, 35, 62, 87, 41, 55, 59, 46, 56, 94, 33, 81, 62, 42, 7, 84, 37, 45, 60, 60, 28, 76, 78, 63, 56, 58, 60, 68, 31, 87, 59, 56, 40, 63, 86, 18, 69, 61, 52, 61, 86, 21, 53, 58, 52, 48, 86, 47, 52, 58, 53, 25, 76, 19, 86, 60, 66, 41, 59, 84, 43, 45, 56, 44, 51, 84, 0, 70, 61, 56, 22, 80, 76, 27, 59, 60, 38, 82, 84, 14, 61, 61, 56, 72, 0, 95, 60, 59, 61, 67, 46, 81, 57, 59, 44, 56, 90, 41, 62, 59, 34, 57};
  CuriePME.learn(subject102_3_6, 120, 3);
  static byte subject102_3_7[] PROGMEM = {61, 32, 16, 44, 116, 123, 68, 0, 0, 61, 160, 110, 17, 6, 58, 70, 58, 50, 65, 58, 61, 64, 69, 76, 73, 70, 75, 66, 52, 64, 73, 72, 51, 40, 47, 47, 37, 48, 60, 60, 62, 65, 74, 81, 79, 74, 64, 43, 35, 43, 60, 68, 66, 58, 63, 70, 72, 68, 68, 66, 68, 69, 69, 70, 73, 77, 71, 60, 34, 40, 69, 78, 60, 52, 57, 60, 60, 68, 75, 68, 58, 63, 70, 70, 65, 63, 62, 63, 63, 65, 64, 58, 56, 61, 62, 52, 42, 29, 25, 25, 30, 44, 57, 53, 55, 50, 31, 47, 74, 75, 80, 66, 85, 83, 84, 71, 96, 84, 85, 87};
  CuriePME.learn(subject102_3_7, 120, 3);
  static byte subject102_3_8[] PROGMEM = {70, 56, 65, 16, 81, 77, 31, 54, 64, 56, 62, 16, 63, 43, 53, 66, 63, 61, 69, 66, 67, 63, 62, 37, 66, 77, 3, 61, 59, 30, 54, 64, 52, 72, 51, 59, 41, 88, 41, 79, 57, 58, 44, 62, 75, 69, 51, 62, 30, 62, 80, 88, 48, 58, 38, 65, 83, 41, 67, 66, 52, 23, 80, 85, 68, 61, 57, 56, 55, 45, 95, 60, 60, 43, 65, 78, 5, 67, 61, 58, 3, 79, 74, 58, 57, 46, 30, 82, 67, 47, 56, 64, 19, 85, 85, 56, 57, 55, 41, 80, 8, 78, 61, 59, 45, 53, 81, 77, 55, 57, 40, 57, 84, 28, 58, 61, 44, 62, 86, 11};
  CuriePME.learn(subject102_3_8, 120, 3);
  static byte subject102_3_9[] PROGMEM = {79, 83, 79, 67, 64, 67, 79, 70, 72, 71, 71, 72, 70, 62, 58, 54, 64, 61, 53, 27, 14, 19, 21, 31, 51, 49, 45, 47, 12, 38, 85, 85, 88, 87, 86, 89, 103, 94, 99, 95, 98, 93, 80, 54, 21, 0, 59, 107, 95, 25, 0, 59, 114, 74, 47, 55, 72, 78, 77, 67, 64, 55, 76, 73, 77, 66, 66, 70, 71, 73, 69, 64, 59, 60, 58, 47, 33, 25, 27, 26, 25, 40, 62, 58, 50, 25, 30, 24, 77, 89, 76, 82, 84, 87, 107, 90, 99, 99, 103, 100, 86, 56, 3, 0, 89, 140, 116, 31, 0, 32, 138, 113, 35, 41, 63, 78, 81, 75, 60, 56};
  CuriePME.learn(subject102_3_9, 120, 3);
  static byte subject102_3_10[] PROGMEM = {69, 66, 66, 70, 58, 56, 68, 73, 72, 68, 66, 65, 64, 68, 68, 62, 63, 59, 59, 58, 53, 41, 26, 27, 27, 37, 50, 67, 77, 74, 67, 42, 26, 25, 61, 70, 70, 67, 88, 88, 106, 96, 99, 96, 91, 82, 66, 38, 17, 26, 77, 107, 94, 45, 0, 31, 104, 100, 47, 44, 73, 77, 67, 63, 68, 56, 65, 67, 74, 71, 66, 65, 66, 67, 65, 61, 62, 61, 62, 65, 56, 48, 42, 40, 40, 35, 33, 45, 60, 61, 57, 49, 45, 5, 50, 65, 67, 77, 79, 81, 92, 89, 98, 100, 94, 94, 82, 61, 37, 15, 11, 78, 124, 107, 61, 0, 1, 97, 132, 67};
  CuriePME.learn(subject102_3_10, 120, 3);
  static byte subject102_3_11[] PROGMEM = {54, 60, 72, 73, 72, 66, 62, 64, 68, 67, 65, 63, 61, 63, 63, 56, 51, 49, 49, 50, 44, 38, 41, 43, 51, 53, 50, 35, 37, 22, 59, 65, 74, 85, 81, 86, 86, 88, 93, 93, 88, 86, 82, 70, 52, 59, 36, 41, 86, 107, 69, 5, 0, 83, 141, 96, 24, 42, 67, 78, 70, 66, 58, 55, 72, 74, 72, 65, 64, 68, 70, 68, 69, 65, 59, 64, 65, 56, 50, 46, 51, 50, 41, 39, 37, 39, 50, 51, 44, 46, 41, 6, 73, 57, 76, 87, 90, 79, 82, 90, 95, 99, 96, 87, 71, 57, 49, 30, 43, 95, 77, 18, 0, 87, 132, 77, 35, 39, 60, 77};
  CuriePME.learn(subject102_3_11, 120, 3);
  static byte subject102_3_12[] PROGMEM = {51, 50, 46, 32, 43, 63, 58, 68, 73, 74, 76, 86, 94, 97, 94, 96, 96, 92, 84, 65, 36, 0, 24, 98, 118, 63, 0, 15, 123, 124, 31, 45, 59, 75, 82, 69, 65, 55, 66, 78, 68, 71, 68, 74, 70, 68, 65, 61, 64, 64, 51, 47, 41, 35, 34, 26, 28, 42, 50, 52, 50, 43, 28, 55, 62, 72, 75, 80, 95, 88, 91, 98, 103, 103, 101, 91, 66, 30, 0, 33, 108, 113, 54, 0, 21, 119, 101, 33, 47, 59, 72, 73, 69, 65, 62, 70, 71, 68, 70, 73, 69, 69, 69, 61, 60, 60, 62, 57, 55, 49, 41, 37, 39, 38, 40, 42, 41, 44, 44, 35};
  CuriePME.learn(subject102_3_12, 120, 3);
  static byte subject102_3_13[] PROGMEM = {59, 56, 42, 36, 8, 72, 59, 59, 74, 88, 97, 96, 94, 99, 99, 96, 91, 86, 71, 56, 19, 0, 48, 92, 72, 16, 18, 111, 120, 37, 39, 48, 70, 77, 65, 63, 67, 66, 70, 65, 62, 62, 66, 69, 65, 60, 58, 61, 52, 45, 41, 32, 23, 32, 30, 46, 55, 40, 17, 33, 28, 78, 84, 82, 92, 98, 96, 91, 91, 92, 92, 87, 79, 64, 48, 22, 11, 77, 137, 126, 62, 0, 0, 151, 172, 51, 7, 27, 80, 87, 72, 61, 57, 63, 73, 71, 64, 60, 63, 64, 64, 55, 56, 59, 55, 42, 39, 35, 32, 38, 35, 40, 48, 42, 25, 25, 35, 78, 80, 83};
  CuriePME.learn(subject102_3_13, 120, 3);
  static byte subject102_3_14[] PROGMEM = {0, 57, 160, 112, 22, 11, 53, 77, 85, 63, 65, 58, 75, 70, 65, 63, 62, 64, 65, 62, 66, 59, 54, 57, 57, 52, 41, 30, 20, 27, 30, 46, 45, 36, 30, 14, 44, 55, 66, 79, 85, 100, 90, 86, 92, 95, 94, 96, 92, 86, 68, 51, 22, 2, 62, 119, 104, 26, 0, 61, 144, 83, 28, 31, 65, 72, 69, 69, 60, 62, 75, 69, 69, 61, 62, 64, 62, 60, 62, 59, 66, 58, 48, 44, 35, 30, 30, 26, 38, 54, 54, 49, 30, 10, 33, 61, 75, 81, 89, 95, 90, 89, 87, 96, 100, 96, 93, 81, 59, 33, 1, 21, 94, 123, 83, 10, 0, 83, 123, 56};
  CuriePME.learn(subject102_3_14, 120, 3);
  static byte subject102_3_15[] PROGMEM = {57, 59, 21, 83, 66, 64, 58, 55, 54, 63, 9, 101, 62, 57, 48, 61, 30, 66, 53, 62, 39, 53, 81, 69, 73, 58, 44, 31, 84, 32, 62, 57, 58, 43, 80, 29, 58, 60, 54, 46, 48, 84, 35, 55, 59, 48, 60, 87, 26, 68, 60, 49, 24, 89, 32, 72, 55, 41, 45, 99, 66, 62, 50, 1, 100, 65, 65, 49, 16, 102, 87, 59, 70, 53, 69, 51, 75, 54, 47, 0, 102, 42, 72, 48, 1, 108, 4, 66, 45, 28, 79, 16, 10, 77, 56, 47, 86, 55, 57, 60, 0, 107, 53, 64, 71, 21, 73, 10, 59, 69, 50, 9, 99, 25, 65, 60, 40, 92, 74, 19};
  CuriePME.learn(subject102_3_15, 120, 3);
  static byte subject102_3_16[] PROGMEM = {57, 27, 84, 73, 16, 63, 57, 51, 73, 2, 111, 64, 61, 44, 63, 86, 81, 49, 58, 37, 70, 81, 26, 74, 66, 45, 22, 84, 2, 73, 60, 58, 21, 81, 74, 57, 69, 47, 31, 82, 0, 70, 68, 58, 16, 80, 0, 70, 61, 47, 26, 81, 83, 38, 69, 54, 10, 83, 81, 56, 60, 35, 7, 79, 41, 30, 64, 53, 20, 82, 83, 12, 58, 66, 50, 76, 9, 77, 62, 59, 45, 56, 52, 74, 54, 60, 35, 57, 90, 20, 74, 60, 36, 52, 88, 2, 72, 58, 47, 27, 80, 66, 34, 57, 60, 54, 72, 0, 78, 62, 58, 42, 52, 73, 42, 65, 65, 40, 45, 85};
  CuriePME.learn(subject102_3_16, 120, 3);

  /*category 2 =  sit*/
  static byte subject102_2_0[] PROGMEM = {};
  CuriePME.learn(subject102_2_0, 120, 2);

  /*category 4 = run*/
  static byte subject102_4_0[] PROGMEM = {58, 53, 39, 74, 85, 65, 10, 108, 26, 120, 0, 100, 114, 60, 101, 0, 145, 0, 117, 81, 0, 72, 0, 146, 0, 126, 20, 121, 70, 110, 98, 31, 73, 16, 124, 15, 124, 21, 116, 0, 56, 13, 107, 0, 110, 98, 112, 0, 70, 99, 107, 0, 78, 45, 95, 21, 24, 98, 98, 0, 52, 92, 89, 82, 75, 48, 110, 0, 89, 0, 110, 10, 43, 61, 72, 115, 3, 115, 70, 124, 0, 134, 57, 86, 52, 63, 99, 0, 37, 6, 128, 112, 134, 10, 92, 69, 103, 115, 0, 103, 98, 93, 1, 87, 0, 128, 1, 95, 11, 131, 25, 98, 18, 116, 0, 47, 0, 114, 3, 122};
  CuriePME.learn(subject102_4_0, 120, 4);
  static byte subject102_4_1[] PROGMEM = { 29, 157, 1, 90, 69, 0, 75, 0, 112, 0, 95, 0, 124, 56, 51, 0, 129, 24, 81, 0, 110, 42, 115, 0, 138, 45, 157, 36, 163, 0, 148, 8, 139, 6, 136, 53, 144, 75, 100, 91, 68, 92, 37, 96, 0, 103, 111, 95, 0, 55, 12, 120, 13, 74, 0, 133, 87, 120, 0, 146, 0, 135, 36, 129, 21, 137, 23, 157, 40, 123, 99, 78, 45, 118, 0, 89, 0, 53, 103, 83, 38, 67, 128, 76, 52, 73, 124, 64, 74, 51, 104, 79, 126, 71, 95, 87, 0, 82, 24, 111, 1, 84, 0, 109, 27, 69, 0, 134, 116, 89, 60, 154, 28, 83, 6, 148, 46, 110, 29, 155};
  CuriePME.learn(subject102_4_1, 120, 4);
  static byte subject102_4_2[] PROGMEM = {0, 146, 23, 147, 11, 136, 48, 134, 71, 105, 0, 137, 31, 91, 0, 113, 52, 101, 0, 130, 37, 84, 0, 122, 70, 80, 1, 148, 34, 137, 65, 0, 128, 0, 148, 20, 95, 112, 33, 86, 88, 53, 141, 99, 0, 53, 83, 13, 79, 0, 117, 85, 103, 57, 113, 81, 15, 104, 1, 143, 94, 28, 49, 0, 152, 0, 105, 107, 112, 113, 77, 33, 137, 0, 122, 45, 0, 128, 26, 64, 60, 171, 46, 140, 31, 171, 0, 141, 40, 98, 55, 100, 102, 0, 99, 0, 131, 27, 109, 0, 163, 60, 120, 11, 158, 1, 102, 74, 101, 70, 27, 106, 0, 93, 0, 124, 10, 60, 0, 122};
  CuriePME.learn(subject102_4_2, 120, 4);
  static byte subject102_4_3[] PROGMEM = {49, 106, 89, 2, 71, 64, 98, 100, 127, 0, 132, 57, 1, 189, 79, 0, 162, 0, 10, 119, 0, 105, 3, 219, 0, 130, 52, 125, 16, 40, 70, 86, 38, 60, 50, 82, 51, 88, 5, 109, 0, 53, 0, 124, 5, 139, 34, 156, 23, 102, 105, 0, 122, 0, 119, 68, 86, 0, 134, 58, 129, 68, 0, 50, 0, 137, 116, 107, 107, 183, 0, 96, 101, 0, 83, 0, 124, 48, 122, 40, 166, 63, 116, 112, 0, 84, 0, 176, 29, 93, 0, 171, 0, 138, 55, 33, 65, 48, 105, 53, 114, 61, 208, 47, 122, 123, 73, 103, 20, 133, 0, 147, 0, 80, 0, 115, 0, 73, 55, 22};
  CuriePME.learn(subject102_4_3, 120, 4);
  static byte subject102_4_4[] PROGMEM = {0, 160, 16, 114, 60, 141, 80, 35, 108, 69, 89, 0, 137, 44, 133, 13, 222, 0, 115, 0, 221, 0, 124, 89, 0, 94, 3, 117, 43, 111, 0, 148, 47, 102, 129, 57, 109, 0, 139, 0, 66, 0, 130, 123, 129, 44, 107, 30, 0, 120, 106, 132, 106, 13, 108, 20, 156, 0, 112, 80, 102, 72, 1, 88, 0, 37, 0, 62, 64, 10, 13, 75, 72, 71, 73, 43, 96, 0, 89, 0, 163, 0, 129, 0, 176, 14, 136, 79, 0, 82, 0, 153, 0, 123, 92, 0, 102, 56, 90, 5, 52, 121, 0, 101, 0, 178, 20, 116, 87, 113, 66, 65, 90, 0, 66, 0, 137, 27, 126, 103};
  CuriePME.learn(subject102_4_4, 120, 4);
  static byte subject102_4_5[] PROGMEM = {0, 0, 0, 111, 162, 189, 147, 137, 170, 159, 121, 20, 0, 32, 255, 1, 3, 255, 227, 0, 1, 46, 0, 62, 75, 120, 137, 138, 110, 92, 66, 0, 0, 0, 0, 173, 163, 172, 142, 129, 162, 173, 121, 4, 3, 0, 7, 186, 139, 0, 123, 104, 0, 0, 0, 4, 29, 67, 106, 114, 136, 139, 91, 58, 0, 0, 0, 0, 100, 157, 178, 138, 124, 150, 162, 121, 71, 0, 0, 158, 196, 0, 98, 111, 0, 1, 14, 12, 38, 60, 97, 122, 116, 131, 84, 53, 0, 0, 0, 0, 112, 147, 178, 147, 126, 157, 171, 136, 90, 0, 0, 136, 168, 67, 138, 21, 0, 0, 5, 20, 49};
  CuriePME.learn(subject102_4_5, 120, 4);
  static byte subject102_4_6[] PROGMEM = {70, 0, 0, 0, 0, 105, 136, 133, 166, 153, 151, 159, 143, 103, 6, 0, 14, 129, 20, 197, 116, 0, 0, 19, 74, 58, 85, 101, 94, 122, 141, 83, 101, 50, 0, 0, 0, 0, 139, 147, 168, 131, 133, 184, 188, 140, 50, 0, 4, 241, 78, 0, 230, 145, 0, 0, 110, 32, 97, 67, 102, 85, 145, 121, 83, 100, 13, 0, 0, 0, 0, 119, 147, 200, 165, 147, 200, 129, 101, 9, 0, 58, 255, 0, 3, 255, 197, 0, 0, 106, 62, 100, 101, 87, 90, 143, 143, 83, 78, 0, 0, 0, 0, 18, 125, 151, 162, 150, 152, 198, 126, 96, 31, 0, 31, 255, 0, 40, 255, 43};
  CuriePME.learn(subject102_4_6, 120, 4);
  static byte subject102_4_7[] PROGMEM = {126, 104, 119, 115, 101, 98, 67, 0, 0, 0, 0, 60, 108, 174, 156, 132, 171, 221, 126, 91, 26, 0, 21, 255, 0, 3, 214, 136, 0, 0, 6, 125, 71, 117, 95, 111, 95, 120, 143, 97, 104, 23, 0, 0, 0, 0, 2, 96, 142, 174, 144, 160, 207, 179, 119, 58, 0, 0, 85, 255, 0, 8, 243, 104, 0, 0, 0, 63, 64, 113, 109, 95, 95, 110, 134, 135, 101, 60, 0, 0, 0, 0, 0, 0, 59, 142, 140, 139, 170, 194, 157, 102, 47, 2, 0, 198, 66, 1, 60, 181, 34, 2, 0, 10, 65, 98, 99, 100, 115, 100, 104, 112, 117, 76, 0, 0, 0, 0, 0, 24};
  CuriePME.learn(subject102_4_7, 120, 4);
  /*static byte subject102_4_8[] PROGMEM = {126, 109, 105, 100, 46, 0, 0, 0, 0, 0, 50, 48, 92, 114, 136, 157, 142, 130, 105, 96, 14, 3, 92, 82, 34, 2, 7, 0, 12, 58, 65, 94, 100, 117, 98, 107, 106, 102, 64, 24, 0, 0, 3, 13, 27, 37, 59, 55, 63, 90, 117, 129, 140, 130, 113, 76, 11, 0, 6, 54, 96, 61, 32, 3, 3, 35, 79, 83, 82, 75, 83, 83, 77, 72, 72, 68, 59, 55, 47, 49, 59, 70, 46, 20, 1, 22, 31, 53, 57, 62, 73, 81, 86, 89, 78, 77, 68, 64, 58, 65, 75, 65, 56, 28, 9, 37, 42, 61, 61, 64, 64, 63, 65, 69, 70, 67, 61, 61, 60, 65};
  CuriePME.learn(subject102_4_8, 120, 4);
  static byte subject102_4_9[] PROGMEM = {53, 54, 54, 52, 54, 58, 58, 57, 62, 58, 44, 45, 41, 56, 64, 75, 70, 74, 81, 85, 93, 90, 82, 72, 62, 68, 77, 82, 84, 86, 109, 80, 26, 17, 66, 81, 74, 68, 61, 60, 49, 33, 17, 9, 15, 26, 43, 68, 81, 91, 109, 130, 116, 114, 106, 68, 4, 3, 0, 0, 0, 24, 47, 44, 81, 94, 122, 146, 151, 142, 123, 107, 90, 100, 64, 15, 0, 67, 64, 9, 0, 0, 0, 3, 62, 78, 108, 123, 127, 136, 115, 114, 99, 74, 6, 0, 0, 0, 25, 64, 70, 89, 123, 139, 154, 156, 147, 119, 110, 59, 85, 97, 35, 0, 1, 28, 11, 0, 0, 41};
  CuriePME.learn(subject102_4_9, 120, 4);*/

  // Serial.println(freeMemory());

  blePeripheral.setLocalName("Activity");
  blePeripheral.setAdvertisedServiceUuid(fitnessService.uuid());

  // add service and characteristic
  blePeripheral.addAttribute(fitnessService);
  blePeripheral.addAttribute(fitnessTypeChar);

  // assign event handlers for connected, disconnected to peripheral
  fitnessTypeChar.setValue(20);

  // advertise the service
  blePeripheral.begin();

  Serial.println("Bluetooth device active, waiting for connections...");

}



void loop ()
{
  blePeripheral.poll();
  BLECentral central = blePeripheral.central();

  byte vector[120];
  unsigned int category;

  if (central) {
    Serial.print(F("Connected to central: "));
    Serial.println(central.address());

    while (central.connected()) {
      readVectorFromIMU(vector);
      category = CuriePME.classify(vector, 120);

      switch (category) {
        case 1:
          Serial.println(F("Still"));
          break;
        case 2:
          Serial.println(F("Sit"));
          break;
        case 3:
          Serial.println(F("Walk"));
          break;
        case 4:
          Serial.println(F("Run"));
          break;
        default:
          Serial.println(F("Unknown"));
      }

      char bigstring[370];
      bigstring[0] = 0;
      int i;
      for (i = 0; i < 120; i++) {
        Serial.print(vector[i]);
        Serial.print(", ");
      }
      Serial.println();

      fitnessTypeChar.setValue((byte) category);
      Serial.println(fitnessTypeChar.value());
      
    }
    Serial.print(F("Disconnected from central: "));
    Serial.println(central.address());
  }
}

void undersample(byte samples[], int numSamples, byte vector[])
{
  int i, j;
  for (i = 0; i < 120; i++) {
    j = i * 2;
    vector[i] = samples[j];
  }
}

void readVectorFromIMU(byte vector[])
{
  byte accel[250];
  int raw[3];

  unsigned int samples = 0;
  unsigned int i = 0;

  while (samples < 250) {
    if (CurieIMU.dataReady()) {

      CurieIMU.readAccelerometer(raw[0], raw[1], raw[2]);

      /* Map raw values to 0-255 */
      accel[i] = (byte) map(raw[0], IMULow, IMUHigh, 0, 255);
      // accel[i + 1] = (byte) map(raw[1], IMULow, IMUHigh, 0, 255);
      // accel[i + 2] = (byte) map(raw[2], IMULow, IMUHigh, 0, 255);

      i += 1;
      ++samples;
    }
  }
  undersample(accel, samples, vector);
}
